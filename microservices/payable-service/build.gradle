buildscript {
    ext {
        springBootVersion = '2.5.3'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'application'
    id 'idea'
    id "com.bmuschko.docker-remote-api"
}
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

// Import task types
import com.bmuschko.gradle.docker.tasks.image.*

// Use task types
task buildAndCreateDockerImage(type: DockerBuildImage) {
    dependsOn build
    inputDir = file('.')
    images.add('canaweb/payable:latest')
}


group = 'ch.canaweb.microservices.core.payable'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

ext {
    mapstructVersion = "1.4.2.Final"
    springCloudVersion = "2020.0.3"
}

dependencies {
    implementation project(':api')
    implementation project(':util')

    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"

    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}